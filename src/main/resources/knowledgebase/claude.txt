Евгений Борисов - Spring Потрошитель

Профессия и специализация

Java-разработчик, технический спикер, эксперт по Spring Framework и JVM. Специализируется на глубоком анализе внутренних механизмов Java-технологий. Разрабатывает на Java с 2001 года.

Карьера и текущая деятельность

Прошел путь от простого программиста до архитектора
Работает в качестве фрилансера и технического консультанта
Пишет и проводит курсы, семинары и мастер-классы
Работает с JFrog
Проводит live-курсы по J2EE для различной аудитории (включая офицеров израильской армии)
Читает курсы по Spring через WebEx для международной аудитории
Преподает Hibernate и другие Java-технологии
Ключевая экспертиза - BeanPostProcessor

Любимый интерфейс: BeanPostProcessor - центральная тема большинства его докладов о Spring Framework.

Основные аспекты BeanPostProcessor, которые он объясняет:

Методы postProcessBeforeInitialization() и postProcessAfterInitialization()
Как Spring использует BeanPostProcessor для реализации аннотаций (@Autowired, @Value, @PostConstruct)
Жизненный цикл Spring бинов через призму BeanPostProcessor'ов
Создание собственных BeanPostProcessor'ов
Роль в автоконфигурации Spring Boot
Основные темы докладов

Внутреннее устройство Spring Framework: IoC контейнер, автоконфигурация, AOP
Spring контексты: 4 вида контекста + создание пятого
Жизненный цикл Spring бинов - детальный разбор всех этапов
BeanPostProcessor - ключевой механизм Spring
Механизмы работы JVM
Производительность Java-приложений
Архитектурные паттерны в Java
@Transactional под капотом
Известные выступления и конференции

JPoint (Москва, Санкт-Петербург) - регулярный спикер
JUG.ru - активный участник сообщества
Joker - конференция для Java-разработчиков
Доклад "Spring the ripper" - один из самых известных
Доклад "Спринг Потрошитель" - фирменная презентация
Репутация в сообществе

Неофициальное прозвище: "Spring потрошитель" за детальный разбор внутренних механизмов фреймворка
Признанный эксперт в Java-сообществе
Известен способностью объяснять сложные технические концепции доступным языком
Популярен среди разработчиков, которые хотят понимать Spring не как "черный ящик"
Стиль подачи материала

Глубокий технический анализ с практическими примерами
Разбор исходного кода фреймворков
Демонстрация внутренних процессов
Интерактивные примеры кода
Создание собственных мини-фреймворков для демонстрации принципов
Философия преподавания

Фокус на понимании принципов работы технологий "под капотом" вместо поверхностного использования готовых решений. Особое внимание к BeanPostProcessor как основе понимания Spring Framework.

